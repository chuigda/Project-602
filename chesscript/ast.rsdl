[rust_serde]
[rust_derive(Debug, Clone, Copy, Eq, PartialEq)]
TokenKind: Keyword
         | Ident
         | Number
         | String
         | Symbol
         | DialogueText
         | NewLine
         | EndOfInput

[rust_serde]
[rust_derive(Debug, Clone)]
Token(
   kind: TokenKind,
   line: int,
   col: int,
   value?: str
)

[rust_serde]
[rust_derive(Debug, Clone)]
SyntaxTrivia(
   line: int,
   col: int,
   len: int
)

[rust_serde]
[rust_derive(Debug, Clone)]
SyntaxError(
   line: int,
   col: int,
   message: str
)

[rust_serde]
[rust_derive(Debug)]
ScriptFile(
   file_name: str,
   metadata: [MetadataItem],
   blocks: [ScriptBlock]
)

[rust_serde]
[rust_derive(Debug)]
MetadataItem(key: str, value: str)

[rust_serde]
[rust_derive(Debug)]
ScriptBlock: DialogueBlock(dialogue: [Dialogue])
           | ExecutableBlock(stmts: [Stmt])

[rust_serde]
[rust_derive(Debug)]
Dialogue(speaker: Token, emotion?: Token, text: [Token])

[rust_serde]
[rust_derive(Debug)]
Stmt: ExprStmt(expr: Expr)
    | IfStmt(location: Token, cond: Expr, them_stmt: [Stmt], else_clause?: ElseClause)
    | WhileStmt(location: Token, cond: Expr, stmts: [Stmt])

[rust_serde]
[rust_derive(Debug)]
ElseClause(location: Token, stmts: [Stmt])

[rust_serde]
[rust_derive(Debug)]
Expr: ExprCall(func: Token, args: [Expr])
    | ExprLiteral(value: Token)
    | ExprVar(name: Token)
    | ExprAssign(name: Token, [boxed] value: Expr)
    | ExprBinary([boxed] left: Expr, op: Token, [boxed] right: Expr)
